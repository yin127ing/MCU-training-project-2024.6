#define uchar unsigned char
#define uint unsigned int
#define DataPort P0   //数码管段选 引脚

//**********************************************************************
//引脚设置    照着仿真图来
// 
sbit CHANGE1 = P2 ^ 5;
sbit CHANGE2 = P2 ^ 6;
//NO.1
sbit R = P1 ^ 0;	//数据串口输入
sbit CLK = P1 ^ 1;	//脉冲信号输入
sbit STB = P1 ^ 2;	//锁存信号

sbit key_u = P1 ^ 3;     //按键引脚
sbit key_d = P1 ^ 4;
sbit key_r = P1 ^ 5;
sbit key_l = P1 ^ 6;
sbit key_m = P1 ^ 7;
sbit key_change = P2 ^ 7;

//NO.2
sbit seg1 = P2 ^ 0;	  //数码管
sbit seg2 = P2 ^ 1;
sbit seg3 = P2 ^ 2;
sbit buzzer = P3 ^ 7;     //蜂鸣器引脚

sbit key_mode = P3 ^ 2;	  //5个按键
sbit key_2 = P3 ^ 3;
sbit key_3 = P3 ^ 4;
sbit key_jia = P3 ^ 5;
sbit key_jian = P3 ^ 6;

//**********************************************************************
//NO.1
uchar order = 0;       //得到的命令
uint move = 0;           //当前到第几个数据
uint hanzi_num = 3;  //汉字的个数
uint hanzi_table_num = 1;   //显示第几组文字

uchar code table1[][32 * 10] = {   //阴码  逐行  逆向
{0x10,0x01,0x10,0x01,0x10,0x01,0x88,0x7F,
0x88,0x40,0x4C,0x20,0x2C,0x04,0x0A,0x04,
0x89,0x14,0x88,0x24,0x48,0x24,0x48,0x44,
0x28,0x44,0x08,0x04,0x08,0x05,0x08,0x02,/*"你",0*/
0x08,0x00,0x08,0x3F,0x08,0x20,0x08,0x10,
0x3F,0x08,0x24,0x04,0x24,0x04,0xA4,0x7F,
0x24,0x04,0x12,0x04,0x14,0x04,0x08,0x04,
0x14,0x04,0x22,0x04,0x21,0x05,0x00,0x02,/*"好",1*/
0x00,0x00,0xC0,0x3F,0x1E,0x08,0x92,0x08,
0x92,0x08,0x92,0x08,0x52,0x08,0xD2,0x7F,
0x12,0x0C,0x12,0x0A,0x1E,0x09,0x92,0x08,
0x40,0x08,0x20,0x08,0x00,0x0A,0x00,0x04,/*"呀",2*/
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //尾部的一屏的空字符，用于清屏，参数和屏大小有关。
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
},
{0x00,0x00,0x08,0x1C,0x0E,0x22,0x08,0x20,
0x08,0x10,0x08,0x08,0x08,0x04,0x3E,0x3E,
0x00,0x00,0x1C,0x18,0x22,0x14,0x20,0x14,
0x18,0x12,0x20,0x3E,0x22,0x10,0x1C,0x10,/*"1234",0*/
0x00,0x00,0x3E,0x1C,0x02,0x02,0x02,0x02,
0x1C,0x1E,0x20,0x22,0x20,0x22,0x1E,0x1C,
0x00,0x00,0x3E,0x1C,0x20,0x22,0x10,0x22,
0x10,0x3E,0x08,0x22,0x04,0x22,0x04,0x1C,/*"5678",0*/
    0x00,0x00,0x1C,0x1C,0x22,0x22,0x22,0x22,
0x3C,0x22,0x20,0x22,0x20,0x22,0x1C,0x1C,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,/*"90  ",0*/
0x00,0x00,0x22,0x1C,0x22,0x08,0x22,0x08,
0x3E,0x08,0x22,0x08,0x22,0x08,0x22,0x1C,
0x00,0x00,0x3C,0x22,0x10,0x12,0x10,0x0A,
0x10,0x06,0x10,0x0A,0x12,0x12,0x0C,0x22,/*"hijlk",0*/

0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00, //尾部的一屏的空字符，用于清屏，参数和屏大小有关。
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
}

};

//NO.2
uchar code dofly_table[10] = { 0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8, 0x80, 0x90, }; //段选 码
uchar hour = 12, min = 12, sec = 0; //时间  时分秒
uchar buzzer_flag = 0;             //蜂鸣器状态
uchar seg_show[8] = { 0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8 };	   //用于缓存即将显示的 数码管值
uchar seg_num = 0;        //用于在全局中  定时器中刷新
uchar setting_flag = 0;   //非设置 暂停       设置 继续
uchar sec_temp = 0;		//用于定时器计算 时间的
uchar naozhong_hour = 12, naozhong_min = 0, naozhong_flag = 0;	  //关于闹钟的

uchar jishi_min = 0, jishi_sec = 0, jishi_5ms = 0;	 //关于计时功能的
uchar jishi_flag = 0;     //是否开始计时

uchar show_temp[32];    //用于显示的缓存

uchar zuoyou_temp[16];   //用于左右移动的显示之外的缓存
char code Hang[] = { 0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f };  //用于行码  ，选择行用的 595

//***************************************************
//函数声明
void delay(int z);
void wordByt(char b);
void seg_switch(uchar num);
delay_ms(uint x);
void Init_Timer0(void);
void NO_1_main();
void NO_2_main();



